{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Sobre o MongoDB \u00c9 um banco de dados opensource, de alta performance e flex\u00edvel, sendo considerado o principal banco de dados NoSQL . Os banco de dados NoSQL apresentam algumas vantagens sobre os outros tipos, principalmente quando precisamos de escalabilidade, flexibilidade, bom desempenho e facilidade para consultas. O MongoDB \u00e9 orientado a documentos, ou seja, os dados s\u00e3o armazenados como documentos, ao contr\u00e1rio de bancos de dados de modelo relacional, onde trabalhamos com registros em linhas e colunas. Os documentos podem ser descritos como dados no formato de chave-valor, no caso, utilizando o formato JSON (JavaScript Object Notation) . Organiza\u00e7\u00f5es de todos os tamanhos est\u00e3o usando o MongoDB pois ele permite que as empresas sejam mais \u00e1geis e escal\u00e1veis, permitindo que os esquemas mudem rapidamente \u00e0 medida que os aplicativos evoluem, sempre fornecendo as funcionalidades que os desenvolvedores esperam dos bancos de dados tradicionais. Foi desenvolvido para oferecer escalabilidade, desempenho e alta disponibilidade, desde a implanta\u00e7\u00e3o de um \u00fanico servidor at\u00e9 grandes arquiteturas complexas de v\u00e1rios centros de dados. A replica\u00e7\u00e3o nativa do MongoDB e a toler\u00e2ncia autom\u00e1tica a falhas oferecem confiabilidade e flexibilidade operacional em toda a empresa.","title":"In\u00edcio"},{"location":"#sobre-o-mongodb","text":"\u00c9 um banco de dados opensource, de alta performance e flex\u00edvel, sendo considerado o principal banco de dados NoSQL . Os banco de dados NoSQL apresentam algumas vantagens sobre os outros tipos, principalmente quando precisamos de escalabilidade, flexibilidade, bom desempenho e facilidade para consultas. O MongoDB \u00e9 orientado a documentos, ou seja, os dados s\u00e3o armazenados como documentos, ao contr\u00e1rio de bancos de dados de modelo relacional, onde trabalhamos com registros em linhas e colunas. Os documentos podem ser descritos como dados no formato de chave-valor, no caso, utilizando o formato JSON (JavaScript Object Notation) . Organiza\u00e7\u00f5es de todos os tamanhos est\u00e3o usando o MongoDB pois ele permite que as empresas sejam mais \u00e1geis e escal\u00e1veis, permitindo que os esquemas mudem rapidamente \u00e0 medida que os aplicativos evoluem, sempre fornecendo as funcionalidades que os desenvolvedores esperam dos bancos de dados tradicionais. Foi desenvolvido para oferecer escalabilidade, desempenho e alta disponibilidade, desde a implanta\u00e7\u00e3o de um \u00fanico servidor at\u00e9 grandes arquiteturas complexas de v\u00e1rios centros de dados. A replica\u00e7\u00e3o nativa do MongoDB e a toler\u00e2ncia autom\u00e1tica a falhas oferecem confiabilidade e flexibilidade operacional em toda a empresa.","title":"Sobre o MongoDB"},{"location":"about/","text":"Sobre o Autor Ol\u00e1! Me chamo Talisson Dami\u00e3o! Tenho 21 anos e sou estudante de Engenharia da Computa\u00e7\u00e3o na Universidade Federal do vale do S\u00e3o Francisco. Entre em contato!","title":"Sobre o Autor"},{"location":"about/#sobre-o-autor","text":"Ol\u00e1! Me chamo Talisson Dami\u00e3o! Tenho 21 anos e sou estudante de Engenharia da Computa\u00e7\u00e3o na Universidade Federal do vale do S\u00e3o Francisco. Entre em contato!","title":"Sobre o Autor"},{"location":"1%20-%20Introdu%C3%A7%C3%A3o%20ao%20MongoDB/Manual%20de%20instala%C3%A7%C3%A3o%20do%20MongoDB%20Compass/","text":"Manual de instala\u00e7\u00e3o do MongoDB Compass Passos iniciais Faremos a instala\u00e7\u00e3o pelo terminal. O primeiro passo \u00e9 baixar o instalador (.deb) do MongoDB Compass wget https://downloads.mongodb.com/compass/mongodb-compass_1.32.2_amd64.deb Em seguida, extra\u00edmos e instalamos o arquivo. sudo dpkg -i mongodb-compass_1.32.2_amd64.deb Agora \u00e9 s\u00f3 executar o MongoDB Compass mongodb-compass","title":"Instala\u00e7\u00e3o do MongoDB Compass"},{"location":"1%20-%20Introdu%C3%A7%C3%A3o%20ao%20MongoDB/Manual%20de%20instala%C3%A7%C3%A3o%20do%20MongoDB%20Compass/#manual-de-instalacao-do-mongodb-compass","text":"","title":"Manual de instala\u00e7\u00e3o do MongoDB Compass"},{"location":"1%20-%20Introdu%C3%A7%C3%A3o%20ao%20MongoDB/Manual%20de%20instala%C3%A7%C3%A3o%20do%20MongoDB%20Compass/#passos-iniciais","text":"Faremos a instala\u00e7\u00e3o pelo terminal. O primeiro passo \u00e9 baixar o instalador (.deb) do MongoDB Compass wget https://downloads.mongodb.com/compass/mongodb-compass_1.32.2_amd64.deb Em seguida, extra\u00edmos e instalamos o arquivo. sudo dpkg -i mongodb-compass_1.32.2_amd64.deb Agora \u00e9 s\u00f3 executar o MongoDB Compass mongodb-compass","title":"Passos iniciais"},{"location":"1%20-%20Introdu%C3%A7%C3%A3o%20ao%20MongoDB/Manual%20de%20instala%C3%A7%C3%A3o%20do%20MongoDB/","text":"Manual de instala\u00e7\u00e3o do MongoDB Passos iniciais O pr\u00e9-requisito de instala\u00e7\u00e3o de banco de dados \u00e9 a prepara\u00e7\u00e3o do servidor. \u00c9 necess\u00e1rio criar um novo usu\u00e1rio sudo (n\u00e3o root) que tenha os privil\u00e9gios ajustados no firewall. O primeiro passo \u00e9 atualizar o gerenciador de pacotes sudo apt update E instalar algumas depend\u00eancias. sudo apt install dirmngr gnupg apt-transport-https ca-certificates software-properties-common Em seguida, baixe a chave do reposit\u00f3rio. wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add - Se tudo correr bem, o terminal retornar\u00e1 uma mensagem de confirma\u00e7\u00e3o. Agora, ser\u00e1 preciso verificar qual \u00e9 a vers\u00e3o do seu sistema usando o comando abaixo: lsb_release -crs O passo seguinte depender\u00e1 de qual \u00e9 a vers\u00e3o do seu sistema. Se seu sistema \u00e9 um Ubuntu 20.04 ou derivado bash echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list Se seu sistema \u00e9 um Ubuntu 18.04 ou derivado bash echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.4 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list Se seu sistema \u00e9 um Ubuntu 16.04 ou derivado bash echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/4.4 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list Atualize novamente o gerenciador de pacotes. sudo apt update Agora podemos instalar o programa. sudo apt install mongodb-org Por padr\u00e3o, o MongoDB \u00e9 executado sob a conta de usu\u00e1rio mongodb. Se alterarmos os usu\u00e1rios, devemos tamb\u00e9m alterar a permiss\u00e3o para os diret\u00f3rios de dados e registros, para atribuir acesso a esses diret\u00f3rios Agora podemos iniciar e verificar o processo mongod executando os seguintes comandos: sudo systemctl start mongod sudo systemctl status mongod sudo service mongod start sudo service mongod status Pronto! Se tudo estiver correto, podemos iniciar o mongodb que estar\u00e1 sendo executado em nosso host local usando a porta padr\u00e3o 27017: mongo","title":"Instala\u00e7\u00e3o do MongoDB"},{"location":"1%20-%20Introdu%C3%A7%C3%A3o%20ao%20MongoDB/Manual%20de%20instala%C3%A7%C3%A3o%20do%20MongoDB/#manual-de-instalacao-do-mongodb","text":"","title":"Manual de instala\u00e7\u00e3o do MongoDB"},{"location":"1%20-%20Introdu%C3%A7%C3%A3o%20ao%20MongoDB/Manual%20de%20instala%C3%A7%C3%A3o%20do%20MongoDB/#passos-iniciais","text":"O pr\u00e9-requisito de instala\u00e7\u00e3o de banco de dados \u00e9 a prepara\u00e7\u00e3o do servidor. \u00c9 necess\u00e1rio criar um novo usu\u00e1rio sudo (n\u00e3o root) que tenha os privil\u00e9gios ajustados no firewall. O primeiro passo \u00e9 atualizar o gerenciador de pacotes sudo apt update E instalar algumas depend\u00eancias. sudo apt install dirmngr gnupg apt-transport-https ca-certificates software-properties-common Em seguida, baixe a chave do reposit\u00f3rio. wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add - Se tudo correr bem, o terminal retornar\u00e1 uma mensagem de confirma\u00e7\u00e3o. Agora, ser\u00e1 preciso verificar qual \u00e9 a vers\u00e3o do seu sistema usando o comando abaixo: lsb_release -crs O passo seguinte depender\u00e1 de qual \u00e9 a vers\u00e3o do seu sistema. Se seu sistema \u00e9 um Ubuntu 20.04 ou derivado bash echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list Se seu sistema \u00e9 um Ubuntu 18.04 ou derivado bash echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.4 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list Se seu sistema \u00e9 um Ubuntu 16.04 ou derivado bash echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/4.4 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list Atualize novamente o gerenciador de pacotes. sudo apt update Agora podemos instalar o programa. sudo apt install mongodb-org Por padr\u00e3o, o MongoDB \u00e9 executado sob a conta de usu\u00e1rio mongodb. Se alterarmos os usu\u00e1rios, devemos tamb\u00e9m alterar a permiss\u00e3o para os diret\u00f3rios de dados e registros, para atribuir acesso a esses diret\u00f3rios Agora podemos iniciar e verificar o processo mongod executando os seguintes comandos: sudo systemctl start mongod sudo systemctl status mongod sudo service mongod start sudo service mongod status Pronto! Se tudo estiver correto, podemos iniciar o mongodb que estar\u00e1 sendo executado em nosso host local usando a porta padr\u00e3o 27017: mongo","title":"Passos iniciais"},{"location":"1%20-%20Introdu%C3%A7%C3%A3o%20ao%20MongoDB/Sobre%20o%20MongoDB/","text":"Sobre o MongoDB \u00c9 um banco de dados opensource, de alta performance e flex\u00edvel, sendo considerado o principal banco de dados NoSQL . Os banco de dados NoSQL apresentam algumas vantagens sobre os outros tipos, principalmente quando precisamos de escalabilidade, flexibilidade, bom desempenho e facilidade para consultas. O MongoDB \u00e9 orientado a documentos, ou seja, os dados s\u00e3o armazenados como documentos, ao contr\u00e1rio de bancos de dados de modelo relacional, onde trabalhamos com registros em linhas e colunas. Os documentos podem ser descritos como dados no formato de chave-valor, no caso, utilizando o formato JSON (JavaScript Object Notation) . Organiza\u00e7\u00f5es de todos os tamanhos est\u00e3o usando o MongoDB pois ele permite que as empresas sejam mais \u00e1geis e escal\u00e1veis, permitindo que os esquemas mudem rapidamente \u00e0 medida que os aplicativos evoluem, sempre fornecendo as funcionalidades que os desenvolvedores esperam dos bancos de dados tradicionais. Foi desenvolvido para oferecer escalabilidade, desempenho e alta disponibilidade, desde a implanta\u00e7\u00e3o de um \u00fanico servidor at\u00e9 grandes arquiteturas complexas de v\u00e1rios centros de dados. A replica\u00e7\u00e3o nativa do MongoDB e a toler\u00e2ncia autom\u00e1tica a falhas oferecem confiabilidade e flexibilidade operacional em toda a empresa.","title":"Sobre o MongoDB"},{"location":"1%20-%20Introdu%C3%A7%C3%A3o%20ao%20MongoDB/Sobre%20o%20MongoDB/#sobre-o-mongodb","text":"\u00c9 um banco de dados opensource, de alta performance e flex\u00edvel, sendo considerado o principal banco de dados NoSQL . Os banco de dados NoSQL apresentam algumas vantagens sobre os outros tipos, principalmente quando precisamos de escalabilidade, flexibilidade, bom desempenho e facilidade para consultas. O MongoDB \u00e9 orientado a documentos, ou seja, os dados s\u00e3o armazenados como documentos, ao contr\u00e1rio de bancos de dados de modelo relacional, onde trabalhamos com registros em linhas e colunas. Os documentos podem ser descritos como dados no formato de chave-valor, no caso, utilizando o formato JSON (JavaScript Object Notation) . Organiza\u00e7\u00f5es de todos os tamanhos est\u00e3o usando o MongoDB pois ele permite que as empresas sejam mais \u00e1geis e escal\u00e1veis, permitindo que os esquemas mudem rapidamente \u00e0 medida que os aplicativos evoluem, sempre fornecendo as funcionalidades que os desenvolvedores esperam dos bancos de dados tradicionais. Foi desenvolvido para oferecer escalabilidade, desempenho e alta disponibilidade, desde a implanta\u00e7\u00e3o de um \u00fanico servidor at\u00e9 grandes arquiteturas complexas de v\u00e1rios centros de dados. A replica\u00e7\u00e3o nativa do MongoDB e a toler\u00e2ncia autom\u00e1tica a falhas oferecem confiabilidade e flexibilidade operacional em toda a empresa.","title":"Sobre o MongoDB"},{"location":"2%20-%20Execu%C3%A7%C3%A3o%20e%20CRUD%20MongoDB/Execu%C3%A7%C3%A3o%20e%20CRUD%20MongoDB/","text":"Execu\u00e7\u00e3o e CRUD MongoDB Passos iniciais Com o MongoDB devidamente instalado, precisamos iniciar o cliente da aplica\u00e7\u00e3o, com os seguintes comandos: sudo systemctl start mongod sudo service mongod start Para verificar se o MongoDB est\u00e1 em execu\u00e7\u00e3o, utilize: sudo systemctl status mongod sudo service mongod status Obs.: Utilize a tecla q para sair da verifica\u00e7\u00e3o Pronto! Se tudo estiver correto, podemos iniciar o mongodb que estar\u00e1 sendo executado em nosso host local usando a porta padr\u00e3o 27017: mongo Criando o primeiro banco de dados com MongoDB No MongoDB, o banco de dados e a tabela s\u00e3o criados automaticamente quando os dados s\u00e3o inseridos pela primeira vez. Utilizamos o comando use para alternar entre bancos de dados ou para criar um banco de dados caso o banco de dados que deseja-se acessar ainda n\u00e3o tenha sido criado. No exemplo abaixo, depois de inserir um \u00fanico registro, o banco de dados \u201cdatabase\u201d e a tabela \u201ctable\u201d s\u00e3o criados dinamicamente. use database Para inserir um dado na tabela do banco de dados: db.table.insert({ nome:\"Benjamin\", idade: 10 }) Para verificar os dados da tabela: db.table.find() CRUD no MongoDB, utilizando o banco de dados veiculos e a tabela carros : use veiculos Inserir dados na base ( insert ): db.carros.insert({ marca:\"Acura\", modelo: \"Integra\", ano: 1992 }) db.carros.insert({ marca:\"Acura\", modelo: \"Legend\", ano: 1997 }) db.carros.insert([{ marca:\"Lotus\", modelo: \"Elan\", ano: 1995 }, { marca:\"Isuzu\", modelo: \"Hombre\", ano: 1995 }]) Recuperar dados da base ( find ): db.carros.find() db.carros.find({marca: \"Acura\"}) db.carros.find({ano: 1995}).pretty() Atualizar dados da base ( update ): db.carros.update({ ano: 1997 }, { marca: \"Bugre\", modelo: \"Buggy\", ano: 1985 }) db.carros.update({ modelo: \"Integra\" }, { $set: { ano: 1995 } }) Excluir dados da base ( remove ): db.carros.remove({ marca: \"Acura\" }) Lista de comandos do MongoDB https://www.mongodb.com/docs/manual/reference/command/","title":"Execu\u00e7\u00e3o e CRUD MongoDB"},{"location":"2%20-%20Execu%C3%A7%C3%A3o%20e%20CRUD%20MongoDB/Execu%C3%A7%C3%A3o%20e%20CRUD%20MongoDB/#execucao-e-crud-mongodb","text":"","title":"Execu\u00e7\u00e3o e CRUD MongoDB"},{"location":"2%20-%20Execu%C3%A7%C3%A3o%20e%20CRUD%20MongoDB/Execu%C3%A7%C3%A3o%20e%20CRUD%20MongoDB/#passos-iniciais","text":"Com o MongoDB devidamente instalado, precisamos iniciar o cliente da aplica\u00e7\u00e3o, com os seguintes comandos: sudo systemctl start mongod sudo service mongod start Para verificar se o MongoDB est\u00e1 em execu\u00e7\u00e3o, utilize: sudo systemctl status mongod sudo service mongod status Obs.: Utilize a tecla q para sair da verifica\u00e7\u00e3o Pronto! Se tudo estiver correto, podemos iniciar o mongodb que estar\u00e1 sendo executado em nosso host local usando a porta padr\u00e3o 27017: mongo","title":"Passos iniciais"},{"location":"2%20-%20Execu%C3%A7%C3%A3o%20e%20CRUD%20MongoDB/Execu%C3%A7%C3%A3o%20e%20CRUD%20MongoDB/#criando-o-primeiro-banco-de-dados-com-mongodb","text":"No MongoDB, o banco de dados e a tabela s\u00e3o criados automaticamente quando os dados s\u00e3o inseridos pela primeira vez. Utilizamos o comando use para alternar entre bancos de dados ou para criar um banco de dados caso o banco de dados que deseja-se acessar ainda n\u00e3o tenha sido criado. No exemplo abaixo, depois de inserir um \u00fanico registro, o banco de dados \u201cdatabase\u201d e a tabela \u201ctable\u201d s\u00e3o criados dinamicamente. use database Para inserir um dado na tabela do banco de dados: db.table.insert({ nome:\"Benjamin\", idade: 10 }) Para verificar os dados da tabela: db.table.find()","title":"Criando o primeiro banco de dados com MongoDB"},{"location":"2%20-%20Execu%C3%A7%C3%A3o%20e%20CRUD%20MongoDB/Execu%C3%A7%C3%A3o%20e%20CRUD%20MongoDB/#crud-no-mongodb-utilizando-o-banco-de-dados-veiculos-e-a-tabela-carros","text":"use veiculos","title":"CRUD no MongoDB, utilizando o banco de dados veiculos e a tabela carros:"},{"location":"2%20-%20Execu%C3%A7%C3%A3o%20e%20CRUD%20MongoDB/Execu%C3%A7%C3%A3o%20e%20CRUD%20MongoDB/#inserir-dados-na-base-insert","text":"db.carros.insert({ marca:\"Acura\", modelo: \"Integra\", ano: 1992 }) db.carros.insert({ marca:\"Acura\", modelo: \"Legend\", ano: 1997 }) db.carros.insert([{ marca:\"Lotus\", modelo: \"Elan\", ano: 1995 }, { marca:\"Isuzu\", modelo: \"Hombre\", ano: 1995 }])","title":"Inserir dados na base (insert):"},{"location":"2%20-%20Execu%C3%A7%C3%A3o%20e%20CRUD%20MongoDB/Execu%C3%A7%C3%A3o%20e%20CRUD%20MongoDB/#recuperar-dados-da-base-find","text":"db.carros.find() db.carros.find({marca: \"Acura\"}) db.carros.find({ano: 1995}).pretty()","title":"Recuperar dados da base (find):"},{"location":"2%20-%20Execu%C3%A7%C3%A3o%20e%20CRUD%20MongoDB/Execu%C3%A7%C3%A3o%20e%20CRUD%20MongoDB/#atualizar-dados-da-base-update","text":"db.carros.update({ ano: 1997 }, { marca: \"Bugre\", modelo: \"Buggy\", ano: 1985 }) db.carros.update({ modelo: \"Integra\" }, { $set: { ano: 1995 } })","title":"Atualizar dados da base (update):"},{"location":"2%20-%20Execu%C3%A7%C3%A3o%20e%20CRUD%20MongoDB/Execu%C3%A7%C3%A3o%20e%20CRUD%20MongoDB/#excluir-dados-da-base-remove","text":"db.carros.remove({ marca: \"Acura\" })","title":"Excluir dados da base (remove):"},{"location":"2%20-%20Execu%C3%A7%C3%A3o%20e%20CRUD%20MongoDB/Execu%C3%A7%C3%A3o%20e%20CRUD%20MongoDB/#lista-de-comandos-do-mongodb","text":"https://www.mongodb.com/docs/manual/reference/command/","title":"Lista de comandos do MongoDB"},{"location":"3%20-%20Utilizando%20MongoDB%20com%20Python/Utilizando%20MongoDB%20com%20Python/","text":"Utilizando MongoDB com Python Passos iniciais Para utilizarmos MongoDB com Python precisamos de uma biblioteca chamada PyMongo. Para instalar o PyMongo \u00e9 necess\u00e1rio ter o Python devidamente instalado (ver material do Airflow) e utilizar os seguintes comandos: python3 -m pip install pymongo Caso j\u00e1 tenha o PyMongo instalado e queira atualiz\u00e1-lo: python3 -m pip install --upgrade pymongo Os comandos utilizados pelo PyMongo s\u00e3o bem semelhantes aqueles utilizados na linha de comando. Segue um CRUD e exemplos de como utilizar JSON no Pymongo: Google Colaboratory","title":"Utilizando MongoDB com Python"},{"location":"3%20-%20Utilizando%20MongoDB%20com%20Python/Utilizando%20MongoDB%20com%20Python/#utilizando-mongodb-com-python","text":"","title":"Utilizando MongoDB com Python"},{"location":"3%20-%20Utilizando%20MongoDB%20com%20Python/Utilizando%20MongoDB%20com%20Python/#passos-iniciais","text":"Para utilizarmos MongoDB com Python precisamos de uma biblioteca chamada PyMongo. Para instalar o PyMongo \u00e9 necess\u00e1rio ter o Python devidamente instalado (ver material do Airflow) e utilizar os seguintes comandos: python3 -m pip install pymongo Caso j\u00e1 tenha o PyMongo instalado e queira atualiz\u00e1-lo: python3 -m pip install --upgrade pymongo Os comandos utilizados pelo PyMongo s\u00e3o bem semelhantes aqueles utilizados na linha de comando. Segue um CRUD e exemplos de como utilizar JSON no Pymongo: Google Colaboratory","title":"Passos iniciais"},{"location":"4%20-%20Exerc%C3%ADcios%20MongoDB/Exerc%C3%ADcios%20MongoDB/","text":"Exerc\u00edcios MongoDB Exerc\u00edcio 1 Seu Anselmo \u00e9 um colecionador de carros antigos, este ano participar\u00e1 de um evento para entusiastas onde ter\u00e1 a oportunidade de adquirir alguns ve\u00edculos de seu interesse. Baseado na experi\u00eancia e nos eventos anteriores, escreveu uma lista de prov\u00e1veis ve\u00edculos dispon\u00edveis no evento. O arquivo JSON abaixo possui todas as informa\u00e7\u00f5es da lista de Seu Anselmo. A partir dele, crie um banco de dados utilizando o PyMongo e exiba as informa\u00e7\u00f5es no terminal. data.json Solu\u00e7\u00e3o import json from pprint import pprint from pymongo import MongoClient client = MongoClient(\"mongodb://localhost:27017/\") database = client[\"veiculos\"] collection = database[\"carros\"] with open('data.json') as file: fileData = json.load(file) if isinstance(fileData, list): collection.insert_many(fileData) else: collection.insert_one(fileData) data = list(collection.find()) pprint(data) Resultado Exerc\u00edcio 2 No evento, Seu Anselmo modificou a lista de acordo com os ve\u00edculos expostos. As seguintes modifica\u00e7\u00f5es ocorreram: Adquiriu o ve\u00edculo da Mazda, modelo 626 GT, do ano de 1993. Percebeu que n\u00e3o tinha mais interesse no Acura Legend de 1997 mas, no de 1990. Se interessou pelo ve\u00edculo da Daewoo, modelo Tico de 1994. Atualize o banco de dados de acordo com as modifica\u00e7\u00f5es e exiba o resultado no terminal. Dica: Ve\u00edculos adquiridos s\u00e3o removidos da lista e ve\u00edculos de interesse s\u00e3o adicionados. Solu\u00e7\u00e3o from pprint import pprint from pymongo import MongoClient client = MongoClient(\"mongodb://localhost:27017/\") database = client[\"veiculos\"] collection = database[\"carros\"] newCar = {'marca': 'Mazda', 'modelo': '626 GT', 'ano': 1993} collection.delete_one(newCar) query = {'marca': 'Acura', 'modelo': 'Legend', 'ano': 1997} newAge = {'$set': {'ano': 1990}} collection.update_one(query, newAge) newCar = {'marca': 'Daewoo', 'modelo': 'Tico', 'ano': 1994} collection.insert_one(newCar) data = list(collection.find()) pprint(data) Resultado Exerc\u00edcio 3 Ap\u00f3s as modifica\u00e7\u00f5es realizadas, exporte o banco de dados como um novo arquivo JSON. Solu\u00e7\u00e3o from textwrap import indent from bson.json_util import dumps from pymongo import MongoClient client = MongoClient(\"mongodb://localhost:27017/\") database = client[\"veiculos\"] collection = database[\"carros\"] data = list(collection.find()) jsonData = dumps(data, indent = 2) with open('data1.json', 'w') as file: file.write(jsonData) Resultado data1.json","title":"Exerc\u00edcios MongoDB"},{"location":"4%20-%20Exerc%C3%ADcios%20MongoDB/Exerc%C3%ADcios%20MongoDB/#exercicios-mongodb","text":"","title":"Exerc\u00edcios MongoDB"},{"location":"4%20-%20Exerc%C3%ADcios%20MongoDB/Exerc%C3%ADcios%20MongoDB/#exercicio-1","text":"Seu Anselmo \u00e9 um colecionador de carros antigos, este ano participar\u00e1 de um evento para entusiastas onde ter\u00e1 a oportunidade de adquirir alguns ve\u00edculos de seu interesse. Baseado na experi\u00eancia e nos eventos anteriores, escreveu uma lista de prov\u00e1veis ve\u00edculos dispon\u00edveis no evento. O arquivo JSON abaixo possui todas as informa\u00e7\u00f5es da lista de Seu Anselmo. A partir dele, crie um banco de dados utilizando o PyMongo e exiba as informa\u00e7\u00f5es no terminal. data.json Solu\u00e7\u00e3o import json from pprint import pprint from pymongo import MongoClient client = MongoClient(\"mongodb://localhost:27017/\") database = client[\"veiculos\"] collection = database[\"carros\"] with open('data.json') as file: fileData = json.load(file) if isinstance(fileData, list): collection.insert_many(fileData) else: collection.insert_one(fileData) data = list(collection.find()) pprint(data) Resultado","title":"Exerc\u00edcio 1"},{"location":"4%20-%20Exerc%C3%ADcios%20MongoDB/Exerc%C3%ADcios%20MongoDB/#exercicio-2","text":"No evento, Seu Anselmo modificou a lista de acordo com os ve\u00edculos expostos. As seguintes modifica\u00e7\u00f5es ocorreram: Adquiriu o ve\u00edculo da Mazda, modelo 626 GT, do ano de 1993. Percebeu que n\u00e3o tinha mais interesse no Acura Legend de 1997 mas, no de 1990. Se interessou pelo ve\u00edculo da Daewoo, modelo Tico de 1994. Atualize o banco de dados de acordo com as modifica\u00e7\u00f5es e exiba o resultado no terminal. Dica: Ve\u00edculos adquiridos s\u00e3o removidos da lista e ve\u00edculos de interesse s\u00e3o adicionados. Solu\u00e7\u00e3o from pprint import pprint from pymongo import MongoClient client = MongoClient(\"mongodb://localhost:27017/\") database = client[\"veiculos\"] collection = database[\"carros\"] newCar = {'marca': 'Mazda', 'modelo': '626 GT', 'ano': 1993} collection.delete_one(newCar) query = {'marca': 'Acura', 'modelo': 'Legend', 'ano': 1997} newAge = {'$set': {'ano': 1990}} collection.update_one(query, newAge) newCar = {'marca': 'Daewoo', 'modelo': 'Tico', 'ano': 1994} collection.insert_one(newCar) data = list(collection.find()) pprint(data) Resultado","title":"Exerc\u00edcio 2"},{"location":"4%20-%20Exerc%C3%ADcios%20MongoDB/Exerc%C3%ADcios%20MongoDB/#exercicio-3","text":"Ap\u00f3s as modifica\u00e7\u00f5es realizadas, exporte o banco de dados como um novo arquivo JSON. Solu\u00e7\u00e3o from textwrap import indent from bson.json_util import dumps from pymongo import MongoClient client = MongoClient(\"mongodb://localhost:27017/\") database = client[\"veiculos\"] collection = database[\"carros\"] data = list(collection.find()) jsonData = dumps(data, indent = 2) with open('data1.json', 'w') as file: file.write(jsonData) Resultado data1.json","title":"Exerc\u00edcio 3"}]}